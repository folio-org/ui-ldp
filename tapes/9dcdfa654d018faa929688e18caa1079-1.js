var path = require("path");

/**
 * POST /ldp/db/query
 *
 * connection: keep-alive
 * host: folio-snapshot-load-okapi.dev.folio.org
 * proxy-connection: keep-alive
 * content-length: 119
 * x-okapi-tenant: diku
 * x-okapi-token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkaWt1X2FkbWluIiwidXNlcl9pZCI6IjViODVmZTMxLTc1YzItNTJkNy05NzgyLTRkNDYwYWI5YjA0ZCIsImlhdCI6MTYzMzAyODE1OCwidGVuYW50IjoiZGlrdSJ9.tlnR9tVL5k1TC_IHXZiqVY0xaCV7hFKG6XyZZsFx74Q
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/7.7.0 Chrome/89.0.4328.0 Electron/12.0.0-beta.14 Safari/537.36
 * content-type: application/json
 * accept: * / *
 * origin: http://localhost:3001
 * sec-fetch-site: same-site
 * sec-fetch-mode: cors
 * sec-fetch-dest: empty
 * referer: http://localhost:3001/ldp
 * accept-encoding: gzip
 * accept-language: en-GB
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("date", "Thu, 30 Sep 2021 18:56:09 GMT");
  res.setHeader("content-type", "application/json");
  res.setHeader("transfer-encoding", "chunked");
  res.setHeader("connection", "keep-alive");
  res.setHeader("vary", "origin");
  res.setHeader("access-control-allow-origin", "*");
  res.setHeader("access-control-expose-headers", "location,X-Okapi-Trace,X-Okapi-Token,Authorization,X-Okapi-Request-Id,X-Okapi-Module-Id");
  res.setHeader("x-okapi-trace", "POST mod-authtoken-2.10.0-SNAPSHOT.92 http://10.36.1.13:9177/ldp/db/query : 202 13471us, POST mod-ldp-0.0.3-SNAPSHOT.47 http://10.36.1.13:9173/ldp/db/query : 200 5821us");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("", "base64"));
  res.write(new Buffer("bHVlIiA6ICJ7XG4gICAgXCJpZFwiOiBcIjA4NTIyZGE0LTY2OGEtNDQ1MC1hNzY5LTNhYmZhZTU2NzhhZFwiLFxuICAgIFwiYWN0aXZlXCI6IGZhbHNlLFxuICAgIFwiYmFyY29kZVwiOiBcIjU0ODc1NTI0MTE5NDQxN1wiLFxuICAgIFwiY3JlYXRlZERhdGVcIjogXCIyMDIxLTA5LTMwVDE2OjEzOjAzLjQ3MyswMDowMFwiLFxuICAgIFwiZGVwYXJ0bWVudHNcIjogW10sXG4gICAgXCJlbnJvbGxtZW50RGF0ZVwiOiBcIjIwMTYtMDctMTJUMDA6MDA6MDAuMDAwKzAwOjAwXCIsXG4gICAgXCJleHBpcmF0aW9uRGF0ZVwiOiBcIjIwMjAtMDMtMzBUMDA6MDA6MDAuMDAwKzAwOjAwXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICAgIFwiY3JlYXRlZERhdGVcIjogXCIyMDIxLTA5LTMwVDE2OjEzOjAzLjQ3MCswMDowMFwiLFxuICAgICAgICBcInVwZGF0ZWREYXRlXCI6IFwiMjAyMS0wOS0zMFQxNjoxMzowMy40NzArMDA6MDBcIlxuICAgIH0sXG4gICAgXCJwYXRyb25Hcm91cFwiOiBcIjM2ODRhNzg2LTY2NzEtNDI2OC04ZWQwLTlkYjgyZWJjYTYwYlwiLFxuICAgIFwicGVyc29uYWxcIjoge1xuICAgICAgICBcImFkZHJlc3Nlc1wiOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJhZGRyZXNzTGluZTFcIjogXCIzMjc5NiBLdWhuIERyaXZlIFN1aXRlIDk1MFwiLFxuICAgICAgICAgICAgICAgIFwiYWRkcmVzc1R5cGVJZFwiOiBcIjFjNGIyMjVmLWY2NjktNGU5Yi1hZmNkLWViYzBlMjczYTM0ZVwiLFxuICAgICAgICAgICAgICAgIFwiY2l0eVwiOiBcIkJvd2xpbmcgR3JlZW5cIixcbiAgICAgICAgICAgICAgICBcImNvdW50cnlJZFwiOiBcIlVTXCIsXG4gICAgICAgICAgICAgICAgXCJwb3N0YWxDb2RlXCI6IFwiNTIxNTAtNDQzMlwiLFxuICAgICAgICAgICAgICAgIFwicHJpbWFyeUFkZHJlc3NcIjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBcInJlZ2lvblwiOiBcIkNUXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgXCJkYXRlT2ZCaXJ0aFwiOiBcIjE5OTYtMDctMDVUMDA6MDA6MDAuMDAwKzAwOjAwXCIsXG4gICAgICAgIFwiZW1haWxcIjogXCJ3ZXJuZXJAd29sZmYtaGF1Y2subGtcIixcbiAgICAgICAgXCJmaXJzdE5hbWVcIjogXCJBbGVlblwiLFxuICAgICAgICBcImxhc3ROYW1lXCI6IFwiQnJhdW5cIixcbiAgICAgICAgXCJwaG9uZVwiOiBcIjEtMDI5LTU1NS0xNjk5XCIsXG4gICAgICAgIFwicHJlZmVycmVkQ29udGFjdFR5cGVJZFwiOiBcIjAwNFwiXG4gICAgfSxcbiAgICBcInByb3h5Rm9yXCI6IFtdLFxuICAgIFwidHlwZVwiOiBcInBhdHJvblwiLFxuICAgIFwidXBkYXRlZERhdGVcIjogXCIyMDIxLTA5LTMwVDE2OjEzOjAzLjQ3MyswMDowMFwiLFxuICAgIFwidXNlcm5hbWVcIjogXCJqb2hhblwiXG59IgogIH0KfSwgewogICJpZCIgOiAiMDhkMDhlMTYtZDNmZi00OGQ5LWI2MjUtZTViNTg4ZDM3MDFlIiwKICAiYWN0aXZlIiA6IHRydWUsCiAgImJhcmNvZGUiIDogIjE2MzMwMTkwMTYzNjU3NjMxMDYiLAogICJjcmVhdGVkX2RhdGUiIDogIjIwMjEtMDktMzBUMTY6MjM6MzYuMzcwKzAwOjAwIiwKICAiZW5yb2xsbWVudF9kYXRlIiA6IG51bGwsCiAgImV4cGlyYXRpb25fZGF0ZSIgOiBudWxsLAogICJwYXRyb25fZ3JvdXAiIDogIjM2ODRhNzg2LTY2NzEtNDI2OC04ZWQwLTlkYjgyZWJjYTYwYiIsCiAgInR5cGUiIDogInBhdHJvbiIsCiAgInVwZGF0ZWRfZGF0ZSIgOiAiMjAyMS0wOS0zMFQxNjoyMzozNi4zNzArMDA6MDAiLAogICJ1c2VybmFtZSIgOiAiY29weS1jYXRhbG9nZXIiLAogICJkYXRhIiA6IHsKICAgICJ0eXBlIiA6ICJqc29uIiwKICAgICJ2YWx1ZSIgOiAie1xuICAgIFwiaWRcIjogXCIwOGQwOGUxNi1kM2ZmLTQ4ZDktYjYyNS1lNWI1ODhkMzcwMWVcIixcbiAgICBcImFjdGl2ZVwiOiB0cnVlLFxuICAgIFwiYmFyY29kZVwiOiBcIjE2MzMwMTkwMTYzNjU3NjMxMDZcIixcbiAgICBcImNyZWF0ZWREYXRlXCI6IFwiMjAyMS0wOS0zMFQxNjoyMzozNi4zNzArMDA6MDBcIixcbiAgICBcImRlcGFydG1lbnRzXCI6IFtdLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgICBcImNyZWF0ZWRCeVVzZXJJZFwiOiBcIjViODVmZTMxLTc1YzItNTJkNy05NzgyLTRkNDYwYWI5YjA0ZFwiLFxuICAgICAgICBcImNyZWF0ZWREYXRlXCI6IFwiMjAyMS0wOS0zMFQxNjoyMzozNi4zNjgrMDA6MDBcIixcbiAgICAgICAgXCJ1cGRhdGVkQnlVc2VySWRcIjogXCI1Yjg1ZmUzMS03NWMyLTUyZDctOTc4Mi00ZDQ2MGFiOWIwNGRcIixcbiAgICAgICAgXCJ1cGRhdGVkRGF0ZVwiOiBcIjIwMjEtMDktMzBUMTY6MjM6MzYuMzY4KzAwOjAwXCJcbiAgICB9LFxuICAgIFwicGF0cm9uR3JvdXBcIjogXCIzNjg0YTc4Ni02NjcxLTQyNjgtOGVkMC05ZGI4MmViY2E2MGJcIixcbiAgICBcInBlcnNvbmFsXCI6IHtcbiAgICAgICAgXCJhZGRyZXNzZXNcIjogW10sXG4gICAgICAgIFwiZmlyc3ROYW1lXCI6IFwiY29weS1jYXRhbG9nZXJcIixcbiAgICAgICAgXCJsYXN0TmFtZVwiOiBcIkFkbWluXCJcbiAgICB9LFxuICAgIFwicHJveHlGb3JcIjogW10sXG4gICAgXCJ0eXBlXCI6IFwicGF0cm9uXCIsXG4gICAgXCJ1cGRhdGVkRGF0ZVwiOiBcIjIwMjEtMDktMzBUMTY6MjM6MzYuMzcwKzAwOjAwXCIsXG4gICAgXCJ1c2VybmFtZVwiOiBcImNvcHktY2F0YWxvZ2VyXCJcbn0iCiAgfQp9LCB7CiAgImlkIiA6ICIwYTI0NmY2MS1kODVmLTQyYjYtOGRjYy00OGQyNWE0NjY5MGIiLAogICJhY3RpdmUiIDogZmFsc2UsCiAgImJhcmNvZGUiIDogIjg1NTc4ODYyMDQxMzMwNyIsCiAgImNyZWF0ZWRfZGF0ZSIgOiAiMjAyMS0wOS0zMFQxNjoxMzowMS45NDcrMDA6MDAiLAogICJlbnJvbGxtZW50X2RhdGUiIDogIjIwMTUtMDQtMDhUMDA6MDA6MDAuMDAwKzAwOjAwIiwKICAiZXhwaXJhdGlvbl9kYXRlIiA6ICIyMDE5LTA4LTIwVDAwOjAwOjAwLjAwMCswMDowMCIsCiAgInBhdHJvbl9ncm91cCIgOiAiMzY4NGE3ODYtNjY3MS00MjY4LThlZDAtOWRiODJlYmNhNjBiIiwKICAidHlwZSIgOiAicGF0cm9uIiwKICAidXBkYXRlZF9kYXRlIiA6ICIyMDIxLTA5LTMwVDE2OjEzOjAxLjk0NyswMDowMCIsCiAgInVzZXJuYW1lIiA6ICJtYXhpbmUiLAogICJkYXRhIiA6IHsKICAgICJ0eXBlIiA6ICJqc29uIiwKICAgICJ2YWx1ZSIgOiAie1xuICAgIFwiaWRcIjogXCIwYTI0NmY2MS1kODVmLTQyYjYtOGRjYy00OGQyNWE0NjY5MGJcIixcbiAgICBcImFjdGl2ZVwiOiBmYWxzZSxcbiAgICBcImJhcmNvZGVcIjogXCI4NTU3ODg2MjA0MTMzMDdcIixcbiAgICBcImNyZWF0ZWREYXRlXCI6IFwiMjAyMS0wOS0zMFQxNjoxMzowMS45NDcrMDA6MDBcIixcbiAgICBcImRlcGFydG1lbnRzXCI6IFtdLFxuICAgIFwiZW5yb2xsbWVudERhdGVcIjogXCIyMDE1LTA0LTA4VDAwOjAwOjAwLjAwMCswMDowMFwiLFxuICAgIFwiZXhwaXJhdGlvbkRhdGVcIjogXCIyMDE5LTA4LTIwVDAwOjAwOjAwLjAwMCswMDowMFwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgICBcImNyZWF0ZWREYXRlXCI6IFwiMjAyMS0wOS0zMFQxNjoxMzowMS45NDIrMDA6MDBcIixcbiAgICAgICAgXCJ1cGRhdGVkRGF0ZVwiOiBcIjIwMjEtMDktMzBUMTY6MTM6MDEuOTQyKzAwOjAwXCJcbiAgICB9LFxuICAgIFwicGF0cm9uR3JvdXBcIjogXCIzNjg0YTc4Ni02NjcxLTQyNjgtOGVkMC05ZGI4MmViY2E2MGJcIixcbiAgICBcInBlcnNvbmFsXCI6IHtcbiAgICAgICAgXCJhZGRyZXNzZXNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwiYWRkcmVzc0xpbmUxXCI6IFwiODY3MzEgQ29ucm95IFdhbGsgIzYwN1wiLFxuICAgICAgICAgICAgICAgIFwiYWRkcmVzc1R5cGVJZFwiOiBcIjFjNGIyMjVmLWY2NjktNGU5Yi1hZmNkLWViYzBlMjczYTM0ZVwiLFxuICAgICAgICAgICAgICAgIFwiY2l0eVwiOiBcIkxhIFBhbG1hXCIsXG4gICAgICAgICAgICAgICAgXCJjb3VudHJ5SWRcIjogXCJVU1wiLFxuICAgICAgICAgICAgICAgIFwicG9zdGFsQ29kZVwiOiBcIjkzMDQ1XCIsXG4gICAgICAgICAgICAgICAgXCJwcmltYXJ5QWRkcmVzc1wiOiB0cnVlLFxuICAgICAgICAgICAgICAgIFwicmVnaW9uXCI6IFwiTkhcIlxuICAgICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBcImRhdGVPZkJpcnRoXCI6IFwiMTk3Ni0wMS0xMFQwMDowMDowMC4wMDArMDA6MDBcIixcbiAgICAgICAgXCJlbWFpbFwiOiBcInNhc2hhQGxhbmd3b3J0aC1ncm91cC5ubS51c1wiLFxuICAgICAgICBcImZpcnN0TmFtZVwiOiBcIlJveGFuZVwiLFxuICAgICAgICBcImxhc3ROYW1lXCI6IFwiU2NoYW1iZXJnZXJcIixcbiAgICAgICAgXCJtaWRkbGVOYW1lXCI6IFwiU3V6YW5uZVwiLFxuICAgICAgICBcIm1vYmlsZVBob25lXCI6IFwiKDgyNik4MTEtNjIyMSB4ODU1M1wiLFxuICAgICAgICBcInBob25lXCI6IFwiNzU5Ljc0OS4yNjI0IHg1NTI0XCIsXG4gICAgICAgIFwicHJlZmVycmVkQ29udGFjdFR5cGVJZFwiOiBcIjAwNFwiXG4gICAgfSxcbiAgICBcInByb3h5Rm9yXCI6IFtdLFxuICAgIFwidHlwZVwiOiBcInBhdHJvblwiLFxuICAgIFwidXBkYXRlZERhdGVcIjogXCIyMDIxLTA5LTMwVDE2OjEzOjAxLjk0NyswMDowMFwiLFxuICAgIFwidXNlcm5hbWVcIjogXCJtYXhpbmVcIlxufSIKICB9Cn0gXQ==", "base64"));
  res.end();

  return __filename;
};
